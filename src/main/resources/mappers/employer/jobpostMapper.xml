<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="org.wit.hrmatching.mapper.employer.JobPostMapper">

    <insert id="insertJobPost" parameterType="JobPostVO">
        INSERT INTO job_posts (
            user_id, title, description, required_skills, salary, location,
            employment_type, deadline, job_category, required_skills , workplace_address
        ) VALUES (
                     #{userId}, #{title}, #{description}, #{requiredSkills}, #{salary}, #{location},
                     #{employmentType}, #{deadline}, #{jobCategory}, #{techStacks}, #{workplaceAddress}
                 )
    </insert>

    <select id="selectRecentJobPostList" resultType="JobPostVO">
        /* 기업페이지 메인- 채용공고내역 조회 */
        SELECT *
          FROM (
              SELECT *, ROW_NUMBER() OVER (ORDER BY create_at DESC) AS row_num
                FROM job_posts
               WHERE user_id = #{userId}
                 AND deleted_at IS NULL
                ) AS numbered
                WHERE row_num &lt; 6
                AND deleted_at IS NULL
    </select>

    <select id="selectJobPostAllList" resultType="JobPostVO">
        /* 기업페이지 채용공고- 채용공고내역 조회 */
        SELECT a.*, IFNULL(b.cnt, 0) AS applicant_count
        FROM hrms.job_posts a
                 LEFT JOIN (
            SELECT job_post_id, COUNT(*) AS cnt
            FROM hrms.applications
            GROUP BY job_post_id
        ) b ON a.id = b.job_post_id
        WHERE a.user_id = #{userId}
          AND a.deleted_at IS NULL
    </select>

    <select id="selectApplicantList" resultType="JobPostVO">
        select user_id as userId, title, description, required_skills as requiredSkills, salary,
               location, deadline, create_at as createAt, view_count as viewCount,
               bookmark_count as bookmarkCount, employment_type as employmentType,
               job_category as jobCategory
        from job_posts
        where id=#{recruitId} and deleted_at is null
    </select>

    <select id="selectJobPostDetail" resultType="JobPostVO">
        /* 기업페이지 - 채용공고 상세페이지 조회 */
        SELECT A.*, B.*, C.name
        FROM job_posts A
                 JOIN employer_profiles B ON A.user_id = B.user_id
                 JOIN users C ON B.user_id = C.id
        WHERE A.id = #{jobPostId}
    </select>

    <update id="updateJobPostDetail" parameterType="JobPostVO">
        UPDATE job_posts
        SET title = #{title},
            description = #{description},
            required_skills  = #{techStacks},
            workplace_address = #{workplaceAddress},
            salary = #{salary},
            location = #{location},
            employment_type = #{employmentType},
            deadline = #{deadline},
            job_category = #{jobCategory},
            updated_at = NOW()
        WHERE id = #{id} AND deleted_at IS NULL
    </update>

    <update id="softDeleteJobPosts">
        UPDATE job_posts
        SET deleted_at = NOW()
        WHERE id IN
        <foreach item="id" collection="ids" open="(" separator="," close=")">
            #{id}
        </foreach>
    </update>

    <!-- 채용공고 목록 (검색 포함, 공고당 지원자수 포함) -->
    <select id="findJobPostsByTitle" resultType="JobPostVO">
        SELECT A.*, IFNULL(B.ApplicantCntByJobpost, 0) AS ApplicantCntByJobpost
          FROM job_posts A
          LEFT JOIN (
                    SELECT job_post_id, COUNT(*) AS applicantCntByJobpost
                    FROM applications
                    GROUP BY job_post_id
                    ) B ON A.id = B.job_post_id
         WHERE A.user_id = #{userId}
           AND A.deleted_at IS NULL
        <if test="keyword != null and keyword != ''">
            AND A.title LIKE CONCAT('%', #{keyword}, '%')
        </if>
         ORDER BY A.id DESC
        LIMIT #{size} OFFSET #{offset}
    </select>

    <!-- 공고 개수 (검색 포함) -->
    <select id="countJobPosts" resultType="int">
        SELECT COUNT(*)
        FROM job_posts
        WHERE user_id = #{userId}
        AND deleted_at IS NULL
        <if test="keyword != null and keyword != ''">
            AND title LIKE CONCAT('%', #{keyword}, '%')
        </if>
    </select>

    <!-- 전체/마감/진행 공고 개수 -->
    <select id="countJobPostStatus" resultType="JobPostVO">
        SELECT
        COUNT(*) AS totalCount,
        SUM(CASE WHEN deadline &lt; CURRENT_DATE THEN 1 ELSE 0 END) AS expiredCount,
        SUM(CASE WHEN deadline >= CURRENT_DATE THEN 1 ELSE 0 END) AS activeCount
        FROM job_posts
        WHERE user_id = #{userId}
        AND deleted_at IS NULL
    </select>

</mapper>