<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="org.wit.hrmatching.mapper.applicant.RecruitMapper">

    <select id="selectJobPost" resultType="JobPostVO">
        select user_id as userId, title, description, required_skills as requiredSkills, salary,
               location, deadline, create_at as createAt, view_count as viewCount,
               bookmark_count as bookmarkCount, employment_type as employmentType,
               job_category as jobCategory, workplace_address as workplaceAddress,
               experience_type as experienceType, experience_years as experienceYears, id
        from job_posts
        where id=#{jobPostId}
        <if test="isAdmin == false">
            and deleted_at is null
        </if>
    </select>

    <select id="selectEmployerProfile" resultType="EmployerProfilesVO">
        select company_name as companyName, address, phone_number as phoneNumber, homepage_url as homepageUrl,
               industry, company_size as companySize, email, user_id as userId
        from employer_profiles
        where user_id=#{employerUserId}
    </select>

    <update id="increaseViewCount">
        update job_posts
        set view_count = view_count + 1
        where id=#{jobPostId} and deleted_at is null
    </update>

    <select id="selectExistApplicationCount" parameterType="map" resultType="int">
        select count(*)
        from applications
        where job_post_id=#{jobPostId} and user_id=#{userId}
    </select>

    <insert id="insertApplication" parameterType="ApplicationsVO">
        insert into applications
        (user_id, job_post_id, resume_id)
        values (#{userId}, #{jobPostId}, #{resumeId})
    </insert>

    <select id="selectRecruitList">
        select
            jp.id as jobPostId,
            jp.title as jobPostTitle,
            jp.location,
            jp.experience_type as experienceType,
            jp.salary,
            jp.employment_type as employmentType,
            jp.deadline,
            jp.create_at as createAt,
            ep.company_name as companyName
        from job_posts jp
            left join employer_profiles ep on jp.user_id = ep.user_id

        <where>
            jp.deleted_at is null
            <if test="keyword != null and keyword != ''">
                AND (
                jp.title LIKE CONCAT('%', #{keyword}, '%')
                OR ep.company_name LIKE CONCAT('%', #{keyword}, '%')
                OR jp.description LIKE CONCAT('%', #{keyword}, '%')
                OR jp.location LIKE CONCAT('%', #{keyword}, '%')
                OR jp.workplace_address LIKE CONCAT('%', #{keyword}, '%')
                OR jp.job_category LIKE CONCAT('%', #{keyword}, '%')
                )
            </if>
            <if test="regionKeyword != null and regionKeyword != ''">
                AND (jp.location LIKE CONCAT('%', #{regionKeyword}, '%') OR jp.workplace_address LIKE CONCAT('%', #{regionKeyword}, '%'))
            </if>

            <if test="region != null and region != ''">
                AND jp.location = #{region}
            </if>
            <if test="techStacks != null and !techStacks.isEmpty()">
                <foreach collection="techStacks" item="stackId" open="AND (" separator=" AND " close=")">
                    FIND_IN_SET(#{stackId}, jp.required_skills) > 0
                </foreach>
            </if>
            <if test="employmentTypes != null and !employmentTypes.isEmpty()">
                AND jp.employment_type IN
                <foreach collection="employmentTypes" item="type" open="(" separator="," close=")">
                    #{type}
                </foreach>
            </if>
            <if test="experienceTypes != null and !experienceTypes.isEmpty()">
                AND jp.experience_type IN
                <foreach collection="experienceTypes" item="type" open="(" separator="," close=")">
                    #{type}
                </foreach>
            </if>
            <if test="salaryOnly">
                AND jp.salary REGEXP '^[0-9]'
            </if>
        </where>

        <choose>
            <when test="sortOrder == 'deadline'">
                order by jp.deadline asc
            </when>
            <when test="sortOrder == 'oldest'">
                order by jp.create_at asc
            </when>
            <when test="sortOrder == 'views'">
                order by jp.view_count asc
            </when>
            <when test="sortOrder == 'scraps'">
                order by jp.bookmark_count asc
            </when>
            <otherwise>
                order by jp.create_at desc
            </otherwise>
        </choose>
        limit #{skip}, #{recordPerPage}
    </select>

    <select id="selectRecruitListCount" resultType="int">
        select count(*)
        from job_posts jp
        left join employer_profiles ep on jp.user_id = ep.user_id

        <where>
            jp.deleted_at is null

            <if test="keyword != null and keyword != ''">
                AND (
                jp.title LIKE CONCAT('%', #{keyword}, '%')
                OR ep.company_name LIKE CONCAT('%', #{keyword}, '%')
                OR jp.description LIKE CONCAT('%', #{keyword}, '%')
                OR jp.location LIKE CONCAT('%', #{keyword}, '%')
                OR jp.job_category LIKE CONCAT('%', #{keyword}, '%')
                )
            </if>

            <if test="regionKeyword != null and regionKeyword != ''">
                AND (jp.location LIKE CONCAT('%', #{regionKeyword}, '%') OR jp.workplace_address LIKE CONCAT('%', #{regionKeyword}, '%'))
            </if>

            <if test="region != null and region != ''">
                AND jp.location = #{region}
            </if>

            <if test="techStacks != null and !techStacks.isEmpty()">
                <foreach collection="techStacks" item="stackId" open="AND (" separator=" AND " close=")">
                    FIND_IN_SET(#{stackId}, jp.required_skills) > 0
                </foreach>
            </if>

            <if test="employmentTypes != null and !employmentTypes.isEmpty()">
                AND jp.employment_type IN
                <foreach collection="employmentTypes" item="type" open="(" separator="," close=")">
                    #{type}
                </foreach>
            </if>
            <if test="experienceTypes != null and !experienceTypes.isEmpty()">
                AND jp.experience_type IN
                <foreach collection="experienceTypes" item="type" open="(" separator="," close=")">
                    #{type}
                </foreach>
            </if>
            <if test="salaryOnly">
                AND jp.salary REGEXP '^[0-9]'
            </if>
        </where>
    </select>

</mapper>